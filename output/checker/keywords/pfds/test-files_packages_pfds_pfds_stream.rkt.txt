'((remove
   (passed . 0)
   (failed
    (total . 152)
    ("missing `]' to close preceding `[', found instead `)'" . 64)
    ("type mismatch" . 14)
    ("Polymorphic function `drop' could not be applied to arguments" . 9)
    ("unbound identifier in module" . 9)
    ("bad syntax" . 6)
    ("expected a `module' declaration" . 5)
    ("Polymorphic function `set-box!' could not be applied to arguments" . 4)
    ("missing `]' to close `[' on line 34, found instead `)'" . 4)
    ("(A)" . 4)
    ("Polymorphic function `loop' could not be applied to arguments" . 4)
    ("missing `]' to close `[' on line 19, found instead `)'; indentation suggests a missing `]' before line 20"
     .
     4)
    ("missing `]' to close `[' on line 78, found instead `)'; indentation suggests a missing `]' before line 79"
     .
     4)
    ("bad syntax (multiple types after identifier)" . 4)
    ("(stream-cons x stream)" . 3)
    ("must be used in a definition context" . 2)
    ("type name used out of context" . 2)
    ("Polymorphic function `cdr' could not be applied to arguments" . 2)
    ("Polymorphic function `stream-append' could not be applied to arguments"
     .
     1)
    ("Declaration for `stream-car' provided, but `stream-car' has no definition"
     .
     1)
    ("Unbound type name drop" . 1)
    ("provided identifier not defined or imported for phase 0" . 1)
    ("Declaration for `A' provided, but `A' has no definition" . 1)
    ("Declaration for `stream2' provided, but `stream2' has no definition" . 1)
    ("not allowed as an expression" . 1)
    ("Unbound type name define" . 1)))
  (truncate
   (passed . 0)
   (failed
    (total . 148)
    ("missing `]' to close preceding `[', found instead `)'" . 24)
    ("unbound identifier in module" . 20)
    ("type mismatch" . 8)
    ("Unbound type name A" . 8)
    ("bad syntax (multiple types after identifier)" . 8)
    ("Polymorphic function `cdr' could not be applied to arguments" . 7)
    ("bad syntax" . 6)
    ("Polymorphic function `empty-stream?' could not be applied to arguments"
     .
     5)
    ("Unbound type name All" . 4)
    ("Unbound type name" . 4)
    ("Polymorphic function `loop' could not be applied to arguments" . 4)
    ("Polymorphic function `set-box!' could not be applied to arguments" . 4)
    ("Unbound type name empty-stream?" . 3)
    ("Polymorphic function `drop' could not be applied to arguments" . 3)
    ("Polymorphic function `car' could not be applied to arguments" . 3)
    ("missing `]' to close `[' on line 97, found instead `)'; indentation suggests a missing `]' before line 98"
     .
     3)
    ("type name used out of context" . 3)
    ("Polymorphic function `stream-cdr' could not be applied to arguments" . 3)
    ("Polymorphic function `stream-car' could not be applied to arguments" . 2)
    ("Unbound type name loop" . 2)
    ("Cannot apply expression of type (Boxof (U (Pairof A (Rec g470 (U Null (Boxof (U (Pairof A g470) (-> (Pairof A g470))))))) (-> (Pairof A (Rec g476 (U Null (Boxof (U (Pairof A g476) (-> (Pairof A g476)))))))))), since it is not a function type"
     .
     1)
    ("(A)" . 1)
    ("Unbound type name stream-car" . 1)
    ("not allowed in an expression context" . 1)
    ("Polymorphic function `box' could not be applied to arguments" . 1)
    ("Cannot apply expression of type (Pairof A (Rec g239 (U Null (Boxof (U (Pairof A g239) (-> (Pairof A g239))))))), since it is not a function type"
     .
     1)
    ("Declaration for `xs' provided, but `xs' has no definition" . 1)
    ("Declaration for `loop' provided, but `loop' has no definition" . 1)
    ("Duplicate type annotation of (All (A) ((Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Listof A))) for cdr, previous was #<procedure>"
     .
     1)
    ("Duplicate type annotation of (All (A) ((Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Listof A))) for car, previous was #<procedure>"
     .
     1)
    ("Polymorphic function `stream-append' could not be applied to arguments"
     .
     1)
    ("(A (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))))"
     .
     1)
    ("(Listof (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))))"
     .
     1)
    ("(A Boolean)" . 1)
    ("(Stream Boolean)" . 1)
    ("Unbound type name stream" . 1)
    ("(stream-cons x stream)" . 1)
    ("Duplicate type annotation of (All (A) (Integer (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))))) for stream, previous was (All (A) (A * -> (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream))))))))"
     .
     1)
    ("Duplicate type annotation of (All (A) (Integer (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))))) for stream-cdr, previous was (All (A) ((Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream))))))))"
     .
     1)
    ("Duplicate type annotation of (All (A) (Integer (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))))) for stream->list, previous was (All (A) ((Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Listof A)))"
     .
     1)
    ("Duplicate type annotation of (All (A) (Integer (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))))) for stream-car, previous was (All (A) ((Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> A))"
     .
     1)
    ("Declaration for `p' provided, but `p' has no definition" . 1)
    ("Duplicate type annotation of (All (A) ((Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))) -> (Rec Stream (U Null (Boxof (U (Pairof A Stream) (-> (Pairof A Stream)))))))) for car, previous was #<procedure>"
     .
     1)
    ("Declaration for `pair' provided, but `pair' has no definition" . 1))))
