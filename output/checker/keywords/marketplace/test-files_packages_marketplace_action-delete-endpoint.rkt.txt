'((remove
   (passed . 0)
   (failed
    (total . 33)
    ("unbound identifier in module" . 6)
    ("expected a `module' declaration" . 5)
    ("bad syntax (multiple types after identifier)" . 5)
    ("identifier is not bound to a structure type" . 5)
    ("must be used in a definition context" . 4)
    ("duplicate argument identifier" . 3)
    ("type name used out of context" . 2)
    ("insufficient type information to typecheck. please add more type annotations"
     .
     1)
    ("duplicate identifier" . 1)
    ("bad syntax" . 1)))
  (truncate
   (passed . 0)
   (failed
    (total . 164)
    ("unbound identifier in module" . 38)
    ("syntax error in pattern" . 22)
    ("type name used out of context" . 18)
    ("duplicate definition for identifier" . 11)
    ("not a provide sub-form" . 10)
    ("bad syntax (multiple types after identifier)" . 9)
    ("bad syntax" . 7)
    ("provided identifier not defined or imported for phase 0" . 6)
    ("identifier is already imported" . 5)
    ("Illegal clause in endpoint definition" . 5)
    ("'" . 5)
    ("Declaration for `udp-driver' provided, but `udp-driver' has no definition"
     .
     4)
    ("Illegal use of on-presence outside endpoint definition context" . 4)
    ("Recursive Type Alias Reference" . 3)
    ("Illegal use of match-conversation outside endpoint definition context"
     .
     3)
    ("Illegal use of on-message outside endpoint definition context" . 2)
    ("must be used in a definition context" . 2)
    ("Illegal use of on-absence outside endpoint definition context" . 1)
    ("not allowed in an expression context" . 1)
    ("State topic clause ...)" . 1)
    ("Declaration for `address' provided, but `address' has no definition" . 1)
    ("Declaration for `remote' provided, but `remote' has no definition" . 1)
    ("Declaration for `any' provided, but `any' has no definition" . 1)
    ("Declaration for `represents' provided, but `represents' has no definition"
     .
     1)
    ("(super-type TypeParam ...) SubType sub-type sub-type?)" . 1)
    ("Unbound type name define-type" . 1)
    ("type mismatch" . 1))))
