'((remove
   (passed . 0)
   (failed
    (total . 310)
    ("unbound identifier in module" . 53)
    ("Type variable B must be used with ..." . 22)
    ("bad syntax" . 19)
    ("(A)" . 16)
    ("type name used out of context" . 14)
    ("type mismatch" . 13)
    ("Unbound type name A" . 10)
    ("bad syntax (multiple types after identifier)" . 8)
    ("Polymorphic function `cdr' could not be applied to arguments" . 8)
    ("Bad arguments to polymorphic function in apply" . 7)
    ("must be used in a definition context" . 5)
    ("Polymorphic function `empty?' could not be applied to arguments" . 5)
    ("Polymorphic function `Heap-trees' could not be applied to arguments" . 5)
    ("duplicate type variable or index" . 4)
    ("Declaration for `heap-ormap' provided, but `heap-ormap' has no definition"
     .
     4)
    ("expected identifier" . 4)
    ("Declaration for `heap-map' provided, but `heap-map' has no definition"
     .
     4)
    ("13 Node> (Integer A (Listof (Node A)))), since it is not a function type"
     .
     4)
    ("Used a type variable (B) not bound with ... as a bound on a ..." . 4)
    ("13 Heap> ((A A -> Boolean) (Listof (Node A)))), since it is not a function type"
     .
     4)
    ("Cannot apply expression of type Integer, since it is not a function type"
     .
     4)
    ("Polymorphic function `Node1' could not be applied to arguments" . 4)
    ("Polymorphic function `map' could not be applied to arguments" . 4)
    ("duplicate definition for identifier" . 3)
    ("duplicate identifier" . 3)
    ("(B)" . 3)
    ("duplicate argument identifier" . 3)
    ("Unbound type name Heap-trees" . 3)
    ("Unbound type name C" . 3)
    ("duplicate type variable declaration" . 3)
    ("Duplicate type annotation of (All (A) ((A -> Boolean) (Heap A) -> (Heap A))) for filter, previous was #<procedure>"
     .
     3)
    ("no expression after a sequence of internal definitions" . 2)
    ("Used a type variable (...) not bound with ... as a bound on a ..." . 2)
    ("Used a type variable (C) not bound with ... as a bound on a ..." . 2)
    ("Used a type variable (A) not bound with ... as a bound on a ..." . 2)
    ("bad syntax (multiple expressions after identifier)" . 2)
    ("Wrong number of arguments, expected 1 and got 2" . 2)
    ("Unbound type name not" . 2)
    ("Unbound type name heap" . 2)
    ("Unbound type name trees" . 2)
    ("No function domains matched in function application" . 2)
    ("Polymorphic function `map-single' could not be applied to arguments" . 2)
    ("Cannot apply expression of type (U Null (Pairof (Node A) (Listof (Node A)))), since it is not a function type"
     .
     2)
    ("Bad arguments to function in apply" . 2)
    ("Polymorphic function `Heap2' could not be applied to arguments" . 2)
    ("((Node A))" . 2)
    ("untyped identifier fold" . 2)
    ("Expected a polymorphic function without ..., but given function/annotation had ..."
     .
     2)
    ("Polymorphic function `find-min/max' could not be applied to arguments"
     .
     2)
    ("Used a type variable (Heap) not bound with ... as a bound on a ..." . 1)
    ("not allowed as an expression" . 1)
    ("bad syntax (missing binding pairs or body)" . 1)
    ("bad syntax;" . 1)
    ("Polymorphic function `ins-tree' could not be applied to arguments" . 1)
    ("invalid pattern" . 1)
    ("Unbound type name or" . 1)
    ("Unbound type name map-single" . 1)
    ("Unbound type name accum" . 1)
    ("Unbound type name func" . 1)
    ("Unbound type name if" . 1)
    ("Unbound type name cond" . 1)
    ("Unbound type name else" . 1)
    ("Unbound type name first" . 1)
    ("Unbound type name comp" . 1)
    ("Unbound type name empty" . 1)
    ("Polymorphic function `cons' could not be applied to arguments" . 1)
    ("Polymorphic function `Node-val' could not be applied to arguments" . 1)
    ("Unbound type name comparer" . 1)
    ("Duplicate type annotation of (All (A) ((A A -> Boolean) A * -> (Heap A))) for sorted-list, previous was (All (A) ((Heap A) -> (Listof A)))"
     .
     1)
    ("Duplicate type annotation of (All (A) ((A A -> Boolean) A * -> (Heap A))) for max, previous was #<procedure>"
     .
     1)
    ("Polymorphic function `get-min' could not be applied to arguments" . 1)
    ("Duplicate type annotation of (All (A C B ...) (case-> ((C A -> C) C (Heap A) -> C) ((C A B ... B -> C) C (Heap A) (Heap B) ... B -> C))) for map-multiple, previous was (All (A C B ...) ((Heap C) (A B ... B -> C) (Heap A) (Heap B) ... B -> (Heap C)))"
     .
     1)
    ("bad syntax (missing body)" . 1)
    ("Unbound type name ..." . 1)))
  (truncate
   (passed . 0)
   (failed
    (total . 234)
    ("unbound identifier in module" . 48)
    ("type name used out of context" . 20)
    ("Used a type variable (B) not bound with ... as a bound on a ..." . 16)
    ("Type variable B must be used with ..." . 15)
    ("expected identifier" . 13)
    ("bad syntax" . 9)
    ("duplicate type variable declaration" . 8)
    ("identifier already provided (as a different binding)" . 8)
    ("must be used in a definition context" . 7)
    ("use of a class keyword is not in a class" . 7)
    ("duplicate definition for identifier" . 7)
    ("illegal use of `.'" . 7)
    ("no expression after a sequence of internal definitions" . 6)
    ("(A)" . 5)
    ("illegal use of syntax" . 5)
    ("Declaration for `local-reverse' provided, but `local-reverse' has no definition"
     .
     5)
    ("expected a `module' declaration" . 5)
    ("Component of case-lambda type was not a function clause" . 5)
    ("ellipses not allowed as an expression" . 4)
    ("duplicate type variable or index" . 4)
    ("Declaration for `clist->list' provided, but `clist->list' has no definition"
     .
     4)
    ("unexpected term" . 4)
    ("bad syntax (multiple types after identifier)" . 4)
    ("'" . 4)
    ("duplicate type variable" . 3)
    ("bad syntax (multiple expressions after identifier)" . 2)
    ("provided identifier not defined or imported for phase 0" . 2)
    ("duplicate argument identifier" . 2)
    ("bad syntax;" . 1)
    ("not a require sub-form" . 1)
    ("Expected a polymorphic function with ..., but function/annotation had no ..."
     .
     1)
    ("Declaration for `list-foldr' provided, but `list-foldr' has no definition"
     .
     1)
    ("missing an \"else\" expression" . 1))))
