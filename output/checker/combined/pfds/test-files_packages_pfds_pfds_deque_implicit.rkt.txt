'((remove
   (passed . 0)
   (failed
    (total . 320)
    ("unbound identifier in module" . 84)
    ("Type variable B must be used with ..." . 31)
    ("type name used out of context" . 21)
    ("syntax error in pattern" . 19)
    ("bad syntax" . 11)
    ("expected identifier" . 9)
    ("struct does not refer to a structure definition" . 8)
    ("expected 3 but got 2" . 8)
    ("duplicate argument identifier" . 8)
    ("must be used in a definition context" . 8)
    ("duplicate type variable declaration" . 7)
    ("duplicate type variable or index" . 6)
    ("expected 1 but got 2" . 6)
    ("Used a type variable (B) not bound with ... as a bound on a ..." . 5)
    ("(A)" . 5)
    ("duplicate definition for identifier" . 5)
    ("Declaration for `head' provided, but `head' has no definition" . 4)
    ("bad syntax (multiple types after identifier)" . 4)
    ("Declaration for `head+tail' provided, but `head+tail' has no definition"
     .
     4)
    ("Used a type variable (...) not bound with ... as a bound on a ..." . 4)
    ("Used a type variable (A) not bound with ... as a bound on a ..." . 4)
    ("Error in macro expansion -- Recursive Type Alias Reference" . 3)
    ("expected 3 but got 1" . 3)
    ("expected 0 but got 2" . 3)
    ("Component of case-lambda type was not a function clause" . 3)
    ("expected 1 but got 3" . 3)
    ("duplicate type variable" . 3)
    ("Used a type variable (C) not bound with ... as a bound on a ..." . 3)
    ("Used a type variable (Deque) not bound with ... as a bound on a ..." . 3)
    ("expected a field-specification keyword" . 3)
    ("duplicate field identifier" . 2)
    ("expected 2 but got 1" . 2)
    ("expected 0 but got 1" . 2)
    ("expected an identifier for the structure type name" . 2)
    ("bad syntax (multiple expressions after identifier)" . 2)
    ("(Zero)" . 1)
    ("Two does not refer to a structure definition" . 1)
    ("cons does not refer to a structure definition" . 1)
    ("empty does not refer to a structure definition" . 1)
    ("is does not refer to a structure definition" . 1)
    ("deque does not refer to a structure definition" . 1)
    ("r does not refer to a structure definition" . 1)
    ("m does not refer to a structure definition" . 1)
    ("expected 1 but got 0" . 1)
    ("expected 2 but got 0" . 1)
    ("expected 3 but got 0" . 1)
    ("Used a type variable (Boolean) not bound with ... as a bound on a ..."
     .
     1)
    ("-> does not refer to a structure definition" . 1)
    ("A does not refer to a structure definition" . 1)
    ("error does not refer to a structure definition" . 1)
    ("init does not refer to a structure definition" . 1)
    ("given does not refer to a structure definition" . 1)
    ("let* does not refer to a structure definition" . 1)
    ("expected 2 but got 3" . 1)
    ("expected 0 but got 3" . 1)
    ("bad syntax;" . 1)
    ("duplicate identifier" . 1)))
  (truncate
   (passed . 0)
   (failed
    (total . 289)
    ("unbound identifier in module" . 125)
    ("bad syntax (multiple types after identifier)" . 28)
    ("Type variable B must be used with ..." . 26)
    ("(A)" . 19)
    ("type name used out of context" . 18)
    ("expected identifier" . 12)
    ("bad syntax" . 10)
    ("must be used in a definition context" . 9)
    ("duplicate argument identifier" . 8)
    ("duplicate type variable declaration" . 8)
    ("use of a class keyword is not in a class" . 5)
    ("Used a type variable (B) not bound with ... as a bound on a ..." . 5)
    ("(empty A)" . 4)
    ("bad syntax (multiple expressions after identifier)" . 3)
    ("omit-define-syntaxes" . 1)
    ("A)" . 1)
    ("Expected a polymorphic function with ..., but function/annotation had no ..."
     .
     1)
    ("apply requires a final list argument, given only a function argument of type (Deque A)"
     .
     1)
    ("duplicate type variable or index" . 1)
    ("duplicate argument name" . 1)
    ("ellipses not allowed as an expression" . 1)
    ("bad syntax (not an identifier and expression for a binding)" . 1)
    ("bad syntax (missing binding pairs or body)" . 1))))
